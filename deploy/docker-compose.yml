version: "3.3"

# Note: Ports 8000, 8001 and 8002 are reserved for the services
services:

  required:
    image: alpine:latest
    depends_on:
      - es7
      - db

  monitoring:
    image: alpine:latest
    depends_on:
      - kibana7
      - adminer

  locations:
    restart: always
    container_name: locations
    build:
      context: ../
      dockerfile: locations/deploy/Dockerfile
    environment:
      ELASTICSEARCH_URL: http://es7:9200/
    ports:
      - "8001:8001"
    depends_on:
      - es7
      - db

  users:
    restart: always
    container_name: users
    build:
      context: ../
      dockerfile: users/deploy/Dockerfile
    environment:
      ELASTICSEARCH_URL: http://es7:9200/
      POSTGRES_DB_URL: postgres://lol:kek@db:5432/users
      LOCATION_SERVICE_GRPC: locations:8002
    ports:
      - "8000:8000"
    depends_on:
      - es7
      - db
      - locations

# The same es7 used for locations and logging just for the study purpose. In a real application it must be two storages
  es7:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: es7
    environment:
      - discovery.type=single-node
    ports:
      - "8003:9200"
    volumes:
      - locations-es7:/usr/share/elasticsearch
    healthcheck:
      test: [ “CMD”, “curl”,”-s” ,”-f”, “http://localhost:9200/_cat/health” ]
      interval: 1m30s
      timeout: 10s
      retries: 3

  kibana7:
    image: docker.elastic.co/kibana/kibana:7.3.1
    environment:
      ELASTICSEARCH_HOSTS: http://es7:9200/
    depends_on:
      - es7

    ports:
      - "8004:5601"

  db:
    image: postgres
    container_name: db
    restart: always
    volumes:
      - users-postgres:/var/lib/postgresql
    environment:
      POSTGRES_PASSWORD: kek
      POSTGRES_USER: lol
      POSTGRES_DB: users
    ports:
      - "8005:5432"

  db_test:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: kek
      POSTGRES_USER: lol
      POSTGRES_DB: users_test
    ports:
      - "8006:5432"

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN='nette'
    ports:
      - "8007:8080"


volumes:
  locations-es7:
  users-postgres: